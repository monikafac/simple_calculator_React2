{"version":3,"sources":["App.module.scss","Item/Item.module.scss","Actions/Actions.module.scss","Item/Item.js","Actions/Actions.js","data/dataItems.js","data/dataActions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Item","value","submitFn","onClick","className","styles","listItem","Action","listAction","dataItems","dataActions","App","state","a_number","b_number","to_do","score","handleClick","e","preventDefault","setState","target","handleAction","handleReset","handleCalculate","parseInt","wrapper","listItemWrapper","map","key","listActionWrapper","calculateReset","this","calculateButton","cButton","scoreWrapper","firstNumber","secondNumber","action","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,gBAAkB,6BAA6B,kBAAoB,+BAA+B,eAAiB,4BAA4B,gBAAkB,6BAA6B,QAAU,qBAAqB,aAAe,4B,qBCA7RD,EAAOC,QAAU,CAAC,SAAW,yB,gBCA7BD,EAAOC,QAAU,CAAC,WAAa,8B,6MCgBhBC,EAXH,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OAER,4BACAC,QAASD,EACTD,MAAOA,EACPG,UAAWC,IAAOC,UAEhBL,I,gBCCSM,EAVD,SAAC,GAAD,IAAEN,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACV,4BACAC,QAASD,EACTD,MAAOA,EACPG,UAAWC,IAAOG,YAChBP,ICTOQ,EAAW,CACpB,CAACR,MAAM,GACP,CAACA,MAAM,GACP,CAACA,MAAM,GACP,CAACA,MAAM,GACP,CAACA,MAAM,GACP,CAACA,MAAM,GACP,CAACA,MAAM,GACP,CAACA,MAAM,GACP,CAACA,MAAM,GACP,CAACA,MAAM,ICVES,EAAa,CACtB,CAACT,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,MCqHIU,E,2MAhHbC,MAAM,CACJC,SAAS,GACTC,SAAS,GACTC,MAAM,GACNC,MAAM,I,EAGVC,YAAY,SAACC,GACXA,EAAEC,iBAEuB,KAAtB,EAAKP,MAAMC,UAAuC,KAAtB,EAAKD,MAAME,SACxC,EAAKM,SAAS,CACZP,SAASK,EAAEG,OAAOpB,QAIU,KAAvB,EAAKW,MAAMC,UAAwC,KAAtB,EAAKD,MAAME,UAC7C,EAAKM,SAAS,CACZN,SAASI,EAAEG,OAAOpB,S,EASxBqB,aAAa,SAACJ,GACZA,EAAEC,iBAEA,EAAKC,SAAS,CACZL,MAAMG,EAAEG,OAAOpB,S,EAKvBsB,YAAY,SAACL,GACXA,EAAEC,iBACF,EAAKC,SAAS,CACZP,SAAS,GACTC,SAAS,GACTC,MAAM,GACNC,MAAM,M,EAIVQ,gBAAgB,SAACN,GACfA,EAAEC,iBACqB,MAApB,EAAKP,MAAMG,MACZ,EAAKK,SAAS,CACZJ,MAAOS,SAAS,EAAKb,MAAMC,UAAYY,SAAS,EAAKb,MAAME,YAEnC,MAAnB,EAAKF,MAAMG,MAClB,EAAKK,SAAS,CACZJ,MAAOS,SAAS,EAAKb,MAAMC,UAAYY,SAAS,EAAKb,MAAME,YAGpC,MAAnB,EAAKF,MAAMG,MACjB,EAAKK,SAAS,CACZJ,MAAOS,SAAS,EAAKb,MAAMC,UAAYY,SAAS,EAAKb,MAAME,YAGpC,MAAnB,EAAKF,MAAMG,OACjB,EAAKK,SAAS,CACZJ,MAAOS,SAAS,EAAKb,MAAMC,UAAYY,SAAS,EAAKb,MAAME,a,wEAOtD,IAAD,OACR,OACE,yBAAKV,UAAWC,IAAOqB,SACpB,yBAAKtB,UAAWC,IAAOsB,iBACxBlB,EAAUmB,KAAI,gBAAE3B,EAAF,EAAEA,MAAF,OACb,kBAAC,EAAD,CAAM4B,IAAK5B,EACXA,MAAOA,EACPC,SAAU,EAAKe,YACfb,UAAWC,IAAOC,eAMpB,yBAAKF,UAAWC,IAAOyB,mBACtBpB,EAAYkB,KAAI,gBAAE3B,EAAF,EAAEA,MAAF,OACf,kBAAC,EAAD,CAAQ4B,IAAK5B,EACbA,MAAOA,EACPC,SAAU,EAAKoB,mBAMjB,yBAAKlB,UAAWC,IAAO0B,gBACtB,4BAAQ5B,QAAS6B,KAAKR,gBACtBpB,UAAWC,IAAO4B,iBADlB,KAGA,4BAAQ9B,QAAS6B,KAAKT,YACtBnB,UAAWC,IAAO6B,SADlB,MAGD,yBAAK9B,UAAWC,IAAO8B,cACvB,6BAAK,uBAAG/B,UAAWC,IAAO+B,aAArB,uBAAuDJ,KAAKpB,MAAMC,WACvE,6BAAK,uBAAGT,UAAWC,IAAOgC,cAArB,oBAAqDL,KAAKpB,MAAME,WACrE,6BAAK,uBAAGV,UAAWC,IAAOiC,QAArB,uBAA6CN,KAAKpB,MAAMG,QAC7D,6BAAK,uBAAGX,UAAWC,IAAOW,OAArB,WAAqCgB,KAAKpB,MAAMI,c,GA3GxCuB,IAAMC,WCIJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.81494e79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2NpHS\",\"listItemWrapper\":\"App_listItemWrapper__3ejKa\",\"listActionWrapper\":\"App_listActionWrapper__I8ZQN\",\"calculateReset\":\"App_calculateReset__3l94e\",\"calculateButton\":\"App_calculateButton__1ugQj\",\"cButton\":\"App_cButton__1CR4F\",\"scoreWrapper\":\"App_scoreWrapper__trCAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Item_listItem__aPZhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listAction\":\"Actions_listAction__Faq5o\"};","import React from \"react\";\r\nimport styles from \"./Item.module.scss\";\r\n\r\n\r\n\r\n\r\nconst Item =({value, submitFn})=>(\r\n  \r\n    <button \r\n    onClick={submitFn} \r\n    value={value}\r\n    className={styles.listItem}\r\n    \r\n    >{value}</button>\r\n    \r\n)\r\n\r\nexport default Item","import React from \"react\";\r\nimport styles from \"./Actions.module.scss\"\r\n\r\n\r\nconst Action =({value, submitFn})=>(\r\n    <button \r\n    onClick={submitFn} \r\n    value={value}\r\n    className={styles.listAction}\r\n    >{value}\r\n    \r\n    </button>\r\n)\r\n\r\nexport default Action","export const dataItems =[\r\n    {value:0},\r\n    {value:1},\r\n    {value:2},\r\n    {value:3},\r\n    {value:4},\r\n    {value:5},\r\n    {value:6},\r\n    {value:7},\r\n    {value:8},\r\n    {value:9},\r\n]","export const dataActions =[\r\n    {value:\"+\"},\r\n    {value:\"-\"},\r\n    {value:\"*\"},\r\n    {value:\"/\"},\r\n \r\n]","import React from 'react';\r\nimport styles from \"./App.module.scss\";\r\nimport Item from \"./Item/Item\";\r\nimport Action from \"./Actions/Actions\";\r\nimport {dataItems} from \"./data/dataItems\";\r\nimport {dataActions} from \"./data/dataActions\";\r\n\r\n\r\nclass App extends React.Component {\r\n  state={\r\n    a_number:\"\",\r\n    b_number:\"\",\r\n    to_do:\"\",\r\n    score:\"\",\r\n  }\r\n\r\nhandleClick=(e)=>{\r\n  e.preventDefault();\r\n  \r\n  if(this.state.a_number==='' && this.state.b_number===''){\r\n    this.setState({\r\n      a_number:e.target.value\r\n    })\r\n  }\r\n    \r\n   else if(this.state.a_number !==\"\" && this.state.b_number===''){\r\n      this.setState({\r\n        b_number:e.target.value\r\n      })\r\n   }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  handleAction=(e)=>{\r\n    e.preventDefault();\r\n   \r\n      this.setState({\r\n        to_do:e.target.value\r\n      })\r\n    \r\n  }\r\n\r\nhandleReset=(e)=>{\r\n  e.preventDefault();\r\n  this.setState({\r\n    a_number:\"\",\r\n    b_number:\"\",\r\n    to_do:\"\",\r\n    score:\"\"\r\n  })\r\n}\r\n\r\nhandleCalculate=(e)=>{\r\n  e.preventDefault();\r\n  if(this.state.to_do ===\"+\"){\r\n    this.setState({\r\n      score: parseInt(this.state.a_number) + parseInt(this.state.b_number)\r\n    })\r\n  }else if(this.state.to_do===\"-\"){\r\n    this.setState({\r\n      score: parseInt(this.state.a_number) - parseInt(this.state.b_number)\r\n    })\r\n  }\r\n  else if(this.state.to_do===\"*\"){\r\n    this.setState({\r\n      score: parseInt(this.state.a_number) * parseInt(this.state.b_number)\r\n    })\r\n  }\r\n  else if(this.state.to_do===\"/\"){\r\n    this.setState({\r\n      score: parseInt(this.state.a_number) / parseInt(this.state.b_number)\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\n  render(){\r\n  return (\r\n    <div className={styles.wrapper}>\r\n       <div className={styles.listItemWrapper}>\r\n     {dataItems.map(({value})=>(\r\n       <Item key={value}\r\n       value={value}\r\n       submitFn={this.handleClick}\r\n       className={styles.listItem}\r\n       />\r\n     )) \r\n     }\r\n     </div>\r\n\r\n     <div className={styles.listActionWrapper}>\r\n     {dataActions.map(({value})=>(\r\n       <Action key={value}\r\n       value={value}\r\n       submitFn={this.handleAction}\r\n       />\r\n     )) \r\n     }\r\n      </div>\r\n\r\n     <div className={styles.calculateReset}>\r\n      <button onClick={this.handleCalculate}\r\n      className={styles.calculateButton}>=</button>\r\n\r\n      <button onClick={this.handleReset}\r\n      className={styles.cButton}>C</button>\r\n     </div>\r\n     <div className={styles.scoreWrapper}>\r\n     <div><p className={styles.firstNumber}>Pierwsza liczba to: {this.state.a_number}</p></div> \r\n     <div><p className={styles.secondNumber}>Druga liczba to: {this.state.b_number}</p></div> \r\n     <div><p className={styles.action}>Dzia≈Çanie to:  {this.state.to_do}</p></div>\r\n     <div><p className={styles.score}>WYNIK:  {this.state.score}</p></div>\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}