{"version":3,"sources":["App.module.scss","Item/Item.module.scss","Actions/Actions.module.scss","Item/Item.js","Actions/Actions.js","data/dataItems.js","data/dataActions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Item","value","submitFn","onClick","className","styles","listItem","Action","listAction","dataItems","dataActions","App","state","a_number","b_number","to_do","score","handleClick","e","preventDefault","setState","target","handleAction","handleReset","handleCalculate","parseInt","wrapper","listItemWrapper","map","key","listActionWrapper","calculateReset","this","calculateButton","cButton","scoreWrapper","firstNumber","secondNumber","action","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e419362.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2NpHS\",\"listItemWrapper\":\"App_listItemWrapper__3ejKa\",\"listActionWrapper\":\"App_listActionWrapper__I8ZQN\",\"calculateReset\":\"App_calculateReset__3l94e\",\"calculateButton\":\"App_calculateButton__1ugQj\",\"cButton\":\"App_cButton__1CR4F\",\"scoreWrapper\":\"App_scoreWrapper__trCAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Item_listItem__aPZhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listAction\":\"Actions_listAction__Faq5o\"};","import React from \"react\";\r\nimport styles from \"./Item.module.scss\";\r\n\r\n\r\n\r\n\r\nconst Item =({value, submitFn})=>(\r\n  \r\n    <button \r\n    onClick={submitFn} \r\n    value={value}\r\n    className={styles.listItem}\r\n    \r\n    >{value}</button>\r\n    \r\n)\r\n\r\nexport default Item","import React from \"react\";\r\nimport styles from \"./Actions.module.scss\"\r\n\r\n\r\nconst Action =({value, submitFn})=>(\r\n    <button \r\n    onClick={submitFn} \r\n    value={value}\r\n    className={styles.listAction}\r\n    >{value}\r\n    \r\n    </button>\r\n)\r\n\r\nexport default Action","export const dataItems =[\r\n    {value:0},\r\n    {value:1},\r\n    {value:2},\r\n    {value:3},\r\n    {value:4},\r\n    {value:5},\r\n    {value:6},\r\n    {value:7},\r\n    {value:8},\r\n    {value:9},\r\n]","export const dataActions =[\r\n    {value:\"+\"},\r\n    {value:\"-\"},\r\n    {value:\"*\"},\r\n    {value:\"/\"},\r\n \r\n]","import React from 'react';\nimport styles from \"./App.module.scss\";\nimport Item from \"./Item/Item\";\nimport Action from \"./Actions/Actions\";\nimport {dataItems} from \"./data/dataItems\";\nimport {dataActions} from \"./data/dataActions\";\n\n\nclass App extends React.Component {\n  state={\n    a_number:\"\",\n    b_number:\"\",\n    to_do:\"\",\n    score:\"\",\n  }\n\nhandleClick=(e)=>{\n  e.preventDefault();\n  \n  if(this.state.a_number==='' && this.state.b_number===''){\n    this.setState({\n      a_number:e.target.value\n    })\n  }\n    \n   else if(this.state.a_number !==\"\" && this.state.b_number===''){\n      this.setState({\n        b_number:e.target.value\n      })\n   }\n\n\n  }\n\n\n\n  handleAction=(e)=>{\n    e.preventDefault();\n   \n      this.setState({\n        to_do:e.target.value\n      })\n    \n  }\n\nhandleReset=(e)=>{\n  e.preventDefault();\n  this.setState({\n    a_number:\"\",\n    b_number:\"\",\n    to_do:\"\",\n    score:\"\"\n  })\n}\n\nhandleCalculate=(e)=>{\n  e.preventDefault();\n  if(this.state.to_do ===\"+\"){\n    this.setState({\n      score: parseInt(this.state.a_number) + parseInt(this.state.b_number)\n    })\n  }else if(this.state.to_do===\"-\"){\n    this.setState({\n      score: parseInt(this.state.a_number) - parseInt(this.state.b_number)\n    })\n  }\n  else if(this.state.to_do===\"*\"){\n    this.setState({\n      score: parseInt(this.state.a_number) * parseInt(this.state.b_number)\n    })\n  }\n  else if(this.state.to_do===\"/\"){\n    this.setState({\n      score: parseInt(this.state.a_number) / parseInt(this.state.b_number)\n    })\n  }\n\n}\n\n\n  render(){\n  return (\n    <div className={styles.wrapper}>\n       <div className={styles.listItemWrapper}>\n     {dataItems.map(({value})=>(\n       <Item key={value}\n       value={value}\n       submitFn={this.handleClick}\n       className={styles.listItem}\n       />\n     )) \n     }\n     </div>\n\n     <div className={styles.listActionWrapper}>\n     {dataActions.map(({value})=>(\n       <Action key={value}\n       value={value}\n       submitFn={this.handleAction}\n       />\n     )) \n     }\n      </div>\n\n     <div className={styles.calculateReset}>\n      <button onClick={this.handleCalculate}\n      className={styles.calculateButton}>=</button>\n\n      <button onClick={this.handleReset}\n      className={styles.cButton}>C</button>\n     </div>\n     <div className={styles.scoreWrapper}>\n     <div><p className={styles.firstNumber}>Pierwsza liczba to: {this.state.a_number}</p></div> \n     <div><p className={styles.secondNumber}>Druga liczba to: {this.state.b_number}</p></div> \n     <div><p className={styles.action}>Dzia≈Çanie to:  {this.state.to_do}</p></div>\n     <div><p className={styles.score}>WYNIK:  {this.state.score}</p></div>\n     </div>\n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}